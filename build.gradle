buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter() 
      	maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE") 
    }
}

plugins {
  id "com.jfrog.artifactory" version "3.1.1"
  id "org.sonarqube" version "2.0.1"
}
configurations {
    jaxb
}

apply plugin: 'java' 
apply plugin: 'eclipse' 
apply plugin: 'idea' 
apply plugin: 'spring-boot'
apply plugin: 'build-dashboard'
apply plugin: 'project-report'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'


group = 'com.ericsson.internal.in8'
version =  'latest'
archivesBaseName = 'crm'

jar {
    manifest {
        attributes 'Main-Class': 'se.ericsson.internal.in8.liteprocessor.CsrProcessorDirectApplication'
    }
}

repositories{
    mavenLocal()
    maven { url "https://arm.epk.ericsson.se/artifactory/proj-innov8-prod-release-local" }
    maven { url "https://arm.mo.ca.am.ericsson.se/artifactory/proj-csdp-release" }
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile("org.springframework.boot:spring-boot-starter:1.3.3.RELEASE")
	compile("org.springframework.boot:spring-boot-starter-data-jpa:1.3.3.RELEASE")
	compile("org.springframework.boot:spring-boot-starter-web:1.3.3.RELEASE")
	compile("org.postgresql:postgresql:9.4-1206-jdbc42")
	compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
	compile('com.googlecode.json-simple:json-simple:1.1.1')
	compile('org.hibernate:hibernate-core:5.1.0.Final')
	compile('org.hibernate:hibernate-entitymanager:5.1.0.Final')
	compile('org.apache.httpcomponents:httpclient:4.5.2')
	compile('org.apache.httpcomponents:httpcore:4.4')
	compile("org.jsoup:jsoup:1.9.2")
	compile("org.springframework.boot:spring-boot-starter-amqp:1.3.6.RELEASE")
	compile('org.codehaus.jackson:jackson-mapper-asl:1.9.13')



		 	
   	testCompile("org.testng:testng:6.9.9")
   	testCompile("org.springframework.boot:spring-boot-starter-test"){
        exclude group: 'junit', module: 'junit'
    }
    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
    compile('org.springframework.data:spring-data-redis:1.4.1.RELEASE')
	compile('redis.clients:jedis:2.6.1')
	compile("com.mangofactory:swagger-springmvc:0.8.8")
	compile ('com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20170515.1')
}

tasks.withType(Test).all {
 // show standard out and standard error of the test JVM(s) on the console
   testLogging.showStandardStreams = true
   
// set heap size for the test JVM(s)
   minHeapSize = "128m"
   maxHeapSize = "512m"
   // listen to events in the test execution lifecycle
   beforeTest { descriptor ->
      logger.lifecycle("Running test: " + descriptor)
   }

   // listen to standard out and standard error of the test JVM(s)
   onOutput { descriptor, event ->
      logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
	}	
}

test {
	useTestNG {
	
		includeGroups 'unit'
        useDefaultListeners = true        
	}
    jacoco {
      destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    }
}
 
task componentTest(type: Test) {
	useTestNG() {
		includeGroups 'component'
	}
}

publishing {
    publications {
        mavenJava(MavenPublication) {        
            from components.java
        }
    }
}

//artifactory {
//    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
//    publish {
//        repository {
//            repoKey = 'proj-csdp-release-local'
//            username = "${artifactory_user}"
//            password = "${artifactory_password}"
//        }
//        defaults {
//   publications ('mavenJava')
//}
//    }
//    resolve {
//        repository {
//            repoKey = 'repo'
//            username = "${artifactory_user}"
//            password = "${artifactory_password}"
//            maven = true             
 //       }
//    }
//}
sonarqube {
    properties {
        property "sonar.host.url", "http://172.29.219.71:9000"
        property "sonar.jdbc.driverClassName", "org.postgresql.Driver"
        property "sonar.jacoco.reportPath", "$buildDir/jacoco/jacocoTest.exec"
        property "sonar.projectName", "in8-Api-Crm"
    }
}
